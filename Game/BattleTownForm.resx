<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ujfe+D+vrXb9gZhQlwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timerBattle.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>